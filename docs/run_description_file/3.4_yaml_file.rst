.. Copyright 2013-2017 The Salish Sea MEOPAR contributors
.. and The University of British Columbia
..
.. Licensed under the Apache License, Version 2.0 (the "License");
.. you may not use this file except in compliance with the License.
.. You may obtain a copy of the License at
..
..    http://www.apache.org/licenses/LICENSE-2.0
..
.. Unless required by applicable law or agreed to in writing, software
.. distributed under the License is distributed on an "AS IS" BASIS,
.. WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
.. See the License for the specific language governing permissions and
.. limitations under the License.


.. _NEMO-3.4-NEMO-3.6-RunDescriptionFile:

*****************************
NEMO-3.4 Run Description File
*****************************

.. warning::
    Versions 2.0 and later of the :kbd:`SalishSeaCmd` package introduced changes in the run description file structure that are not backward compatible.
    Older run description files for NEMO-3.4 runs need to be updated before they can be successfully used with the :command:`salishsea run --nemo3.4` command.
    Please see :ref:`SalishSeaCmdChangesThatBreakBackwardCompatibility` for details.


.. _NEMO-3.4-ExampleRunDescriptionYAML-File:

Example Run Description YAML File
=================================

Example (from :file:`SS-run-sets/SalishSea/SalishSea.yaml`):

.. literalinclude:: SalishSea.yaml.example-NEMO-3.4
   :language: yaml


.. _NEMO-3.4-BasicRunConfiguration:

Basic Run Configuration
=======================

The following key-value pairs provide the basic configuration for the run:

:kbd:`config_name`
  The name of the NEMO configuration to use for runs.
  It is the name of a directory in :file:`NEMOGCM/CONFIG/` in the :kbd:`NEMO-code` code directory given by the :kbd:`NEMO` key in the :ref:`NEMO-3.4-Paths`.

:kbd:`MPI decomposition`
  Specify how the domain is to be distributed over the processors in the :kbd:`i` (longitude) and :kbd:`j` (latitude) directions;
  e.g. :kbd:`8x18`.
  Those values are used to set the :kbd:`namelist.compute nammpp` namelist :kbd:`jpni` and :kbd:`jpnj` values,
  to set the number of processors and nodes in the PBS script,
  and to tell the :program:`REBUILD_NEMO` tool how many files to process.

:kbd:`run_id`
   The job identifier that appears in the :command:`qstat` listing.

:kbd:`walltime`
  The wall-clock time requested for the run.
  It limits the time that the job will run for on all machines,
  and it also affects queue priority for runs on Westgrid machines.
  It is important to allow some buffer time when calculating your walltime limits to allow for indeterminacy of the NEMO run itself,
  as well as the time required to combine the per-processor results files into run results files at the end of the run.

:kbd:`email`
  The email address at which you want to receive notification of the beginning and end of execution of the run,
  as well as notification of abnormal abort messages.
  The email key is only required if the address is different than would be constructed by combining your user id on the machine that the job runs on with :kbd:`@eos.ubc.ca`.


.. _NEMO-3.4-Paths:

:kbd:`paths` Section
====================

The :kbd:`paths` section of the run description file is a collection of directory paths that :program:`salishsea` uses to find files in other repos that it needs.

:kbd:`NEMO code config`
  The path to the :file:`CONFIG/` directory in the :ref:`NEMO-code-repo` clone
  where the NEMO configuration directories are to be found;
  e.g. :file:`$HOME/MEOPAR/NEMO-code/NEMOGCM/CONFIG/`.

  An absolute path is required because the path is used in both the current directory and the temporary run directory created in the :kbd:`runs directory`.
  The path may contain :kbd:`~` or :envvar:`$HOME` as alternative spellings of the user's home directory,
  and :envvar:`$USER` as an alternative spelling of the user's userid.

  This key may also be spelled :kbd:`NEMO-code-config` for backward compatibility.

:kbd:`forcing`
  The path to the :ref:`NEMO-forcing-repo` clone where the netCDF files for the grid coordinates,
  bathymetry,
  initial conditions,
  open boundary conditions,
  etc. are to be found.

  This path may be relative or absolute,
  and may contain :kbd:`~` or :envvar:`$HOME` as alternative spellings of the user's home directory,
  and :envvar:`$USER` as an alternative spelling of the user's userid.

:kbd:`runs directory`
  The path to the directory where run directories will be created by the :command:`salishsea run --nemo3.4` (or :command:`salishsea prepare --nemo3.4`) sub-command.
  This path may be either absolute or relative.


.. _NEMO-3.4-Grid:

:kbd:`grid` Section
===================

The :kbd:`grid` section of the run description file contains 2 key-value pairs that provide:

* the names of the coordinates and bathymetry files to use for the run, or,
* relative paths to the coordinates and bathymetry files to use for the run, or,
* absolute paths to the coordinates and bathymetry files to use for the run

If file names are provided,
those files are presumed to be in the :file:`grid/` sub-directory of the directory tree pointed to by the :kbd:`forcing` key in the :ref:`NEMO-3.6-Paths`.

If relative paths are given,
they are appended to the :file:`grid/` directory of the :kbd:`forcing` path.

Relative or absolute paths may contain :kbd:`~` or :envvar:`$HOME` as alternative spellings of the user's home directory,
and :envvar:`$USER` as an alternative spelling of the user's userid.

:kbd:`coordinates`
  The name of,
  or path to,
  the coordinates file to use for the run.
  It is symlinked in the run directory as :file:`coordinates.nc`
  (the file name required by NEMO).

:kbd:`bathymetry`
  The name of,
  or path to,
  the bathymetry file to use for the run
  It is symlinked in the run directory as :file:`bathy_meter.nc`
  (the file name required by NEMO).


.. _NEMO-3.4-Forcing:

:kbd:`forcing` Section
======================

The :kbd:`forcing` section of the run description file contains key-value pairss that provide the names of directories in the :ref:`NEMO-forcing-repo` pointed to by the :kbd:`forcing` key in the :ref:`NEMO-3.4-Paths` where initial conditions and forcing files are found.
Those directory names are expected to appear in the appropriate places in the namelists.

The paths may be relative or absolute,
and may contain :kbd:`~` or :envvar:`$HOME` as alternative spellings of the user's home directory,
and :envvar:`$USER` as an alternative spelling of the user's userid.

If relative paths are given,
they are appended to the :kbd:`forcing` path given in the :ref:`NEMO-3.4-Paths`.

:kbd:`atmospheric`
  The path to the :ref:`AtmosphericForcing` files.
  It is symlinked as :file:`NEMO-atmos/` in the run directory,
  and that directory name must be used in the :kbd:`namelist.surface namsbc_core` and :kbd:`namesbc_apr` namelist.

:kbd:`initial conditions`
  The path to the :ref:`NEMO-forcing` files.
  It is symlinked as :file:`initial_strat/` in the run directory,
  and that directory name must be used in the :kbd:`namlist.domain namtsd` namelist.

  The :kbd:`initial conditions` key can,
  alternatively,
  be used to give the path to and name of a restart file,
  e.g.:

  .. code-block:: yaml

      initial conditions: /ocean/dlatorne/MEOPAR/SalishSea/results/spin-up/8sep17sep/SalishSea_02825280_restart.nc

  which will be symlinked in the run directory as :file:`restart.nc`.

:kbd:`open boundaries`
  The path to the :ref:`OBC` files.
  It is symlinked as :file:`open_boundaries/` in the run directory,
  and that directory name must be used in the :kbd:`namelist.lateral nambdy_dat` namelists.

:kbd:`rivers`
  The path to the :ref:`RiverInput` files.
  It is symlinked as :file:`rivers/` in the run directory,
  and that directory name must be used in the :kbd:`namlist.domain namsbc_rnf` namelist.


.. _NEMO-3.4-Namelists:

:kbd:`namelists` Section
========================

The :kbd:`namelists` section of the run description file contains a list of NEMO namelist section files that will be concatenated to construct the :file:`namelist`
(the file name required by NEMO)
file for the run.

The paths may be relative or absolute,
and may contain :kbd:`~` or :envvar:`$HOME` as alternative spellings of the user's home directory,
and :envvar:`$USER` as an alternative spelling of the user's userid.

If relative paths are given,
they are appended to the directory containing the run description file.

Namelist sections that are specific to the run such as :file:`namelist.time` where the starting and ending timesteps and the restart configuration are defined are typically stored in the same directory as the run description file.
That mean that they are simply listed by name in the :kbd:`namelists` section:

.. code-block:: yaml

    namelists:
      - namelist.time

On the other hand,
when you want to use a namelist section that contains the group's current consensus best values,
list it as a relative path from the location of your run description file to the "standard" nameslist section files in :file:`SS-run-sets/SalishSea/`:

.. code-block:: yaml

    namlists:
      - ../../namelist.bottom

That constructed :file:`namelist` is concluded with empty instances of all of the namelists that NEMO-3.4 requires so that default values will be used for any namelist variables not included in the namelist section files listed in the run description file.
The blob of empty namelist instances is defined as a constant in the :py:mod:`SalishSeaCmd.salishsea_cmd.prepare.py` module.


.. _NEMO-3.4-Output:

:kbd:`output` Section
=====================

The :kbd:`output` section of the run description file contains a single key-value pair that provides the name of the file that defines the output files
to be used by the XIOS server for the run.

The path may be relative or absolute,
and may contain :kbd:`~` or :envvar:`$HOME` as alternative spellings of the user's home directory,
and :envvar:`$USER` as an alternative spelling of the user's userid.

If relative a path is given,
it is appended to the directory containing the run description file.

:kbd:`iodefs`
  The path and name of the :file:`iodef.xml` output files definitions file to use for the run.
  It is copied into the run directory as :file:`iodef.xml`
  (the file name required by XIOS).
  The value is typically either:

  * a relative or absolute run-specific output files definitions file
  * a relative or absolute path to :file:`SS-run-sets/SalishSea/iodef.xml`

  This key may also be spelled :kbd:`files` for backward compatibility.


.. _NEMO-3.4-VCS-Revisions:

:kbd:`vcs revisions` Section
============================

The optional :kbd:`vcs revisions` section of the run description file contains lists of version control system repositories of which the revision and status will be recorded in the temporary run and run results directories.

.. note::
    Revision and status record files for the :file:`NEMO-code`,
    :file:`XIOS`,
    and :file:`NEMO-forcing` Mercurial repositories listed in the :ref:`NEMO-3.4-Paths` section are always generated,
    so those repository paths should not be included in the :kbd:`vcs revisions` section.

An example :kbd:`vcs revisions` section:

.. code-block:: yaml

    vcs revisions:
      hg:
        - $HOME/MEOPAR/SS-run-sets

The sub-section keys
(:kbd:`hg` above)
are the names of the version control tools to use for the repositories listed below them.
At present only Mercurial
(:kbd:`hg`)
is supported.

The paths listed under the version control tool key are the repositories of which the revision and status will be recorded.

The repository paths may be relative or absolute,
and may contain :kbd:`~` or :envvar:`$HOME` as alternative spellings of the user's home directory,
and :envvar:`$USER` as an alternative spelling of the user's userid.

For each repository,
a file will be created in the temporary run directory.
The file names are the repository directory names with :kbd:`_rev.txt` appended.
So,
from the example above,
the files created will be::

  SS-run-sets_rev.txt

Each file will contain the output of the :command:`hg parents -v` command for the repository.
That is a record of the last committed revision of the repository that will be in effect for the run.
For example,
:file:`SS-run-sets_rev.txt` might contain::

  changset:   950:0ba6750ce999d28c5a3f48a415febb692ba49b86
  tag:        tip
  user:       Doug Latornell <djl@douglatornell.ca>
  date:       Tue Jan 31 14:14:50 2017 -05:00
  files:      SalishSea/SalishSea.yaml SalishSea/nemo3.6/SalishSea.yaml SalishSea/nemo3.6/SalishSea_orcinus.yaml SalishSea/nemo3.6/nowcast-like/SalishSea_nowcast_green.yaml SalishSea/nemo3.6/nowcast-like/SalishSea_nowcast_green_orcinus.yaml
  description:
  Add 'NEMO code config' key to selected run description YAML files.

If any of the listed repositories contain uncommitted changes,
the :command:`nemo prepare` command will generate a warning message like::

  nemo_cmd.prepare WARNING: There are uncommitted changes in $HOME/MEOPAR/SS-run-sets/

and the list of uncommitted changes and their status codes,
the output of the :command:`hg status -mardC` command,
will be appended to the :file:`_rev.txt` file.
