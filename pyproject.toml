# Copyright 2013 â€“ present by the SalishSeaCast Project Contributors
# and The University of British Columbia
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# SPDX-License-Identifier: Apache-2.0


# SalishSeaCmd -- SalishSeaCast NEMO command processor

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


[project]
name = "SalishSeaCmd"
dynamic = [ "version" ]
description = "SalishSeaCast NEMO Command Processor"
readme = "README.rst"
requires-python = ">=3.11"
license = { file = "LICENSE" }
authors = [
    { name = "Doug Latornell", email = "dlatornell@eoas.ubc.ca" },
]
keywords = [
    "automation", "oceanography", "ocean modelling",
    "UBC-MOAD", "Salish Sea", "SalishSeaCast",
]
dependencies = [
    # see envs/environment-dev.yaml for conda environment dev installation
    # see envs/requirements.txt for versions most recently used in development
    "arrow",
    "attrs",
    "cliff",
    "f90nml",
    "gitpython",
    "python-hglib",
    "pyyaml",
    # 'NEMO-Cmd',  ; use python3 -m pip install --editable NEMO-Cmd/
]

[project.urls]
"Documentation" = "https://salishsea-cmd.readthedocs.io/en/latest/"
"Changelog" = "https://salishseacmd.readthedocs.io/en/latest/breaking_changes.html"
"Issue Tracker" = "https://github.com/SalishSeaCast/SalishSeaCmd/issues"
"Source Code" = "https://github.com/SalishSeaCast/SalishSeaCmd"

[project.scripts]
salishsea = "salishsea_cmd.main:main"

[project.entry-points.salishsea]
combine = "nemo_cmd.combine:Combine"
deflate = "nemo_cmd.deflate:Deflate"
gather = "nemo_cmd.gather:Gather"
prepare = "salishsea_cmd.prepare:Prepare"
run = "salishsea_cmd.run:Run"
split-results = "salishsea_cmd.split_results:SplitResults"


[tool.coverage.run]
branch = true
source = [ "salishsea_cmd", "tests"]

[tool.coverage.report]
show_missing = true


[tool.hatch.build.targets.wheel]
packages = ["salishsea_cmd"]

[tool.hatch.version]
path = "salishsea_cmd/__about__.py"
